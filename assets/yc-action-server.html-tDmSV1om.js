import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as c,c as r,b as n,d as s,e,w as o,f as t}from"./app-Cq_1ySnz.js";const p={},u=t('<h1 id="yc-action-server" tabindex="-1"><a class="header-anchor" href="#yc-action-server" aria-hidden="true">#</a> yc-action-server</h1><h3 id="what-is-yc-action-server" tabindex="-1"><a class="header-anchor" href="#what-is-yc-action-server" aria-hidden="true">#</a> What Is yc-action-server?</h3><p><code>yc-action-server</code> is a simple backend application. It is for <code>function-call</code> definition method implementation.</p><h3 id="feature-overview" tabindex="-1"><a class="header-anchor" href="#feature-overview" aria-hidden="true">#</a> Feature Overview</h3><p>1.<code>yc-action-server</code> adopts the java + groovy method. Except for the interface and class definitions, which are all java, the implementation methods of function-call are all completed by groovy scripts. The advantage of using a groovy script instead of a class is that the methods in the groovy script can be dynamically called at any time, so that you can respond to the continuously added methods of the upper-layer service <code>function-call</code> at any time.</p><p>2.<code>yc-action-server</code> now is a dependent jar. It can be used in any java project.</p>',6),d=n("code",null,"yc-action-server-example",-1),v=n("h3",{id:"change-log",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#change-log","aria-hidden":"true"},"#"),s(" Change Log")],-1),m=n("ul",null,[n("li",null,"2024-02-22")],-1),k=n("code",null,"yc-action-server",-1),h=n("code",null,"yc-action-server-example",-1),q=t(`<p>modify the pom file in <code>yc-action-server</code> and make a <code>AutoConfiguration</code>.</p><ul><li>First version</li></ul><h3 id="start-up" tabindex="-1"><a class="header-anchor" href="#start-up" aria-hidden="true">#</a> Start Up</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1. execute sqlï¼Œ sql/20231016/yucong.sql

2. The configuration file is configured according to your own environment

3. Start Spring
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explanation" tabindex="-1"><a class="header-anchor" href="#explanation" aria-hidden="true">#</a> Explanation</h3><p>1.Table <code>yc_function_groovy</code> saves the groovy script name and script storage location corresponding to the function name. When the application reads the function defined by the <code>function-call</code> of the upper-layer service, Find the groovy script and call it.</p><p>2.The data table <code>yc_function_execute_record</code> records the records of function calls, including input parameters and returns.</p><p>3.When this application starts, <code>ApplicationListener</code> is set, reads the scripts under resources (including all groovy scripts) and places them at the specified groovy address (<code>groovy_url</code> of <code>yc_function_groovy</code>).</p><p>4.The original java class calling method is also retained in the application.</p><h3 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How To Use?</h3><ol><li>Save groovy script definition</li></ol><ul><li>Method: <strong>POST</strong></li><li>URL: <code>http://localhost:8180/yc/function/groovy/save</code></li><li>Headers: Content-Type:application/json</li><li>Body:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;functionName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;get_current_weather&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;groovyName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Weather.groovy&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;groovyUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/home/scripts/weather/&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yao&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Response:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data has existed&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Upload groovy script file to groovy url</li></ol><ul><li>Method: <strong>POST</strong></li><li>URL: <code>http://localhost:8180/yc/function/groovy/scripts/upload</code></li><li>Headers: Content-Type:multipart/form-data</li><li>Form-data:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>file@
groovyUrl=/home/scripts/weather/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Response:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Groovy scripts not exist in yc_function_groovy, Weather.groovy&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.call execute</p><ul><li>Method: <strong>POST</strong></li><li>URL: <code>http://localhost:8180/yc/function/openai/execute</code></li><li>Headers:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Content-Type:application-json
userName: yao
accountId:
deviceId:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Body:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;get_current_weather&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;arguments&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;location\\&quot;:\\&quot;Los Angeles\\&quot;}&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Response:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;role&quot;</span><span class="token operator">:</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;Weather\\&quot;:\\&quot;Sunny\\&quot;,\\&quot;Temperature\\&quot;:\\&quot;32\\&quot;,\\&quot;UV index\\&quot;:\\&quot;5\\&quot;,\\&quot;Wind speed\\&quot;:\\&quot;5m/s\\&quot;,\\&quot;Air Quality Index\\&quot;:\\&quot;30\\&quot;,\\&quot;location\\&quot;:\\&quot;Los Angeles\\&quot;}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;get_current_weather&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;role&quot;</span><span class="token operator">:</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;Error\\&quot;:\\&quot;No location is provided, the user is required to specify the location.\\&quot;}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;get_current_weather&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30);function g(y,b){const a=l("RouterLink");return c(),r("div",null,[u,n("p",null,[s("3."),d,s(" as a simple example. "),e(a,{to:"/demo/examples/yc-action-server-example.html"},{default:o(()=>[s("README")]),_:1})]),v,m,n("p",null,[s("package "),k,s(" as a dependent jar. And make an example "),h,s("."),e(a,{to:"/demo/examples/yc-action-server-example.html"},{default:o(()=>[s("README")]),_:1})]),q])}const _=i(p,[["render",g],["__file","yc-action-server.html.vue"]]);export{_ as default};
