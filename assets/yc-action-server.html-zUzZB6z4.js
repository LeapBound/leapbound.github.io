import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as n,f as s}from"./app-dMEKAhtF.js";const t={},r=s(`<h1 id="yucong-action-server" tabindex="-1"><a class="header-anchor" href="#yucong-action-server" aria-hidden="true">#</a> yucong action server</h1><p>功能比较简单，给 yucong 项目一些 function 的支持。</p><p>java 语言开发，主要框架 springboot 3 + mybatisplus， mysql 存储，redis 作缓存及消息队列用。</p><h3 id="feature" tabindex="-1"><a class="header-anchor" href="#feature" aria-hidden="true">#</a> Feature</h3><ol><li><p>更丰富的功能</p></li><li><p>其他功能</p></li></ol><h3 id="release-note" tabindex="-1"><a class="header-anchor" href="#release-note" aria-hidden="true">#</a> Release Note.</h3><h6 id="v1-0-0-2023-12-08" tabindex="-1"><a class="header-anchor" href="#v1-0-0-2023-12-08" aria-hidden="true">#</a> v1.0.0 / 2023-12-08</h6><ol><li>基础功能</li></ol><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><div class="language-angular2html line-numbers-mode" data-ext="angular2html"><pre class="language-angular2html"><code>1. 执行 sql， sql/20231016/yucong.sql
2. 配置文件根据自己的环境配置
3. 启动 Spring
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h6><p>方法调用，查找存储中配置的 class/groovy 方法和对应的文件，执行并返回。 如果配置了 groovy scripts，默认存放的位置 /home/scripts。项目启动时，根据存储中的 groovy 记录，会读取 resources/scripts 下的文件，并放到 /home/scripts 下。</p><h3 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> http</h3><ol><li>保存 groovy script</li></ol><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST http://localhost:8180/yc/function/groovy/save
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
<span class="token application-json">
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;functionName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;get_current_weather&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;groovyName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Weather.groovy&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;groovyUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/home/scripts/weather/&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;userName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yao&quot;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>上传 groovy script 文件到 groovy url</li></ol><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST http://localhost:8180/yc/function/groovy/scripts/upload
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[r];function i(l,p){return e(),n("div",null,o)}const u=a(t,[["render",i],["__file","yc-action-server.html.vue"]]);export{u as default};
